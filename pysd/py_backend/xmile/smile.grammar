expr = conditional_statement / (_ pre_oper? _ primary _ (in_oper _ expr)?)

conditional_statement = "IF" _ expr _ "THEN" _ expr _ "ELSE" _ expr

primary  = call / build_call / parens / number / identifier / quoted_identifier
parens   = "(" _ expr _ ")"
call     = func _ "(" _ arguments _ ")"
build_call = build_keyword _ "(" _ arguments _ ")"
arguments = (expr _ ","? _)*

number   = ((~"[0-9]"+ "."? ~"[0-9]"*) / ("." ~"[0-9]"+)) (("e"/"E") ("-"/"+") ~"[0-9]"+)?

_ = spacechar*
spacechar = " "* ~"\t"*

func = ~r"{funcs}"i
build_keyword = ~r"{build_keywords}"i
pre_oper = ~r"{pre_ops}"i
in_oper = ~r"{in_ops}"i
identifier = ~r"{identifiers}"i
quoted_identifier = "\"" ~r"{identifiers}" "\""